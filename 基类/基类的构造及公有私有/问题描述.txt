某公司财务部需要开发一个计算机雇员工资的程序，该公司有3类员工:
工人的工资为每小时工资额（通过成员函数设定）乘以当月工作时数（通过成员函数设定）再加上工龄工资；
销售员工资为每小时工资额（通过成员函数设定）乘以当月工作时数（通过成员函数设定）加上销售额提成再加上工龄工资，
其中销售额提成等于该销售员当月售出商品金额（通过成员函数设定）的1%；
管理人员工资为基本工资1000元再加上工龄工资。
工龄工资就是雇员在该公司工作的工龄每增加一年，月工资就增加35元。
请用面向对象方法分析、设计这个程序，并用C++语言写出完整程序。
设计基类Employee，定义如下：

class Employee
{
	protected:
		string name;   //姓名
		int working_years;   //工龄
	public:
		Employee(string nm="unnamed",int wy=0);
		string Getname();
		double ComputePay();    //求工龄工资，就是：工龄*35
		void SetWorkyears(int wy);
};
由Employee公有派生3个类：Worker、SalesPerson 和 Manager。
在Worker类中添加数据成员:
		double pay_per_hour;  //每小时工资额
		int work_time;             //当月工作时数
成员函数：
		本类的构造函数
		double count_pay();             //计算工资，按上面说明的计算规则
		void SetWorktime(int wt);    //设置当月工作时数
		void Setpay_per_hour(int x);  //设置每小时工资额
在SalesPerson类中添加数据成员：
		double pay_per_hour;   //每小时工资额
		double saleroom;       //当月售出商品金额
		int work_time;         //当月工作时数
成员函数：
		本类的构造函数
		double count_pay();           //计算工资，按上面说明的计算规则
		void SetWorktime(int wt);     //设置当月工作时数
		void Setpay_per_hour(int x);  //设置每小时工资额
		void Setsalesroom(double sr); //设置当月售出商品金额
在Manager类中添加成员函数：
		本类的构造函数
		double count_pay();    //计算工资，按上面说明的计算规则
请直接复制使用如下的main（）函数：
int main()
{
	Worker work("zhangqiang",3,200);
	work.Setpay_per_hour(50);
	cout<<"工资="<<work.count_pay()<<endl;
	work.SetWorktime(180);
	work.SetWorkyears(10);
	work.Setpay_per_hour(30);
	cout<<work.Getname()<<"  "<<work.count_pay()<<endl;


	SalesPerson sales("wangjun",5,300000,25);



	sales.SetWorktime(40);
	sales.Setpay_per_hour(80);
	sales.Setsalesroom(450000);
	cout<<sales.Getname()<<"  "<<sales.count_pay()<<endl;



	Manager mana("sunchao",20);
	cout<<mana.Getname()<<"  "<<mana.count_pay()<<endl;
	return 0;
}

输入描述
无输入

输出描述
工资=10105
zhangqiang  5750
wangjun  7875
sunchao  1700